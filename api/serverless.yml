service: serverless-plooral

useDotenv: true

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: sa-east-1
  memorySize: 512
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - "arn:aws:s3:::*"
  environment:
    PORT: ${env:PORT}
    NODE_ENV: 'production'
    REDIS_PORT: ${env:REDIS_SERVERLESS_PORT}
    REDIS_HOST: ${env:REDIS_SERVERLESS_HOST}
    REDIS_PASSWORD: ${env:REDIS_SERVERLESS_PASSWORD}
    REDIS_USER: ${env:REDIS_SERVERLESS_USER}
    POSTGRES_PASSWORD: ${env:POSTGRES_SERVERLESS_PASSWORD}
    POSTGRES_USER: ${env:POSTGRES_SERVERLESS_USER}
    POSTGRES_DB: ${env:POSTGRES_SERVERLESS_DB}
    POSTGRES_HOST: ${env:POSTGRES_SERVERLESS_HOST}
    POSTGRES_PORT: ${env:POSTGRES_SERVERLESS_PORT}
    AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    AWS_REGION: ${env:AWS_REGION}
    AWS_S3_REGION: ${env:AWS_S3_REGION}
    AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}

functions:
  feed:
    handler: dist/main/lambda.handler
    events:
      - http:
          method: post
          path: feed
      - eventBridge:
          schedule: rate(10 minutes)